{"ast":null,"code":"import { createRouter, createWebHistory, RouteRecordRaw } from \"vue-router\";\nimport LandingPage from \"../pages/LandingPage.vue\";\nimport LoginPage from \"../pages/LoginPage.vue\";\nimport SignupPage from \"../pages/SignupPage.vue\";\nimport DashboardPage from \"../pages/DashboardPage.vue\";\nimport TicketsPage from \"../pages/TicketsPage.vue\";\nimport AnalyticsPage from \"../pages/AnalyticsPage.vue\";\nimport SettingsPage from \"../pages/SettingsPage.vue\";\nconst routes = [{\n  path: \"/\",\n  component: LandingPage,\n  meta: {\n    requiresAuth: false\n  }\n}, {\n  path: \"/login\",\n  component: LoginPage,\n  meta: {\n    requiresAuth: false\n  }\n}, {\n  path: \"/signup\",\n  component: SignupPage,\n  meta: {\n    requiresAuth: false\n  }\n}, {\n  path: \"/dashboard\",\n  component: DashboardPage,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: \"/tickets\",\n  component: TicketsPage,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: \"/analytics\",\n  component: AnalyticsPage,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: \"/settings\",\n  component: SettingsPage,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: \"/:pathMatch(.*)*\",\n  redirect: \"/\"\n}];\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n});\nrouter.beforeEach((to, from, next) => {\n  const token = localStorage.getItem(\"authToken\");\n  const requiresAuth = to.meta.requiresAuth;\n  if (requiresAuth && !token) {\n    next(\"/login\");\n  } else if (!requiresAuth && token && (to.path === \"/login\" || to.path === \"/signup\")) {\n    next(\"/dashboard\");\n  } else {\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","RouteRecordRaw","LandingPage","LoginPage","SignupPage","DashboardPage","TicketsPage","AnalyticsPage","SettingsPage","routes","path","component","meta","requiresAuth","redirect","router","history","beforeEach","to","from","next","token","localStorage","getItem"],"sources":["C:/Users/Tunmise Babalola/Desktop/HNG/HNG Stage 2 task/ticketflow-with-vue/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory, RouteRecordRaw } from \"vue-router\";\r\nimport LandingPage from \"../pages/LandingPage.vue\";\r\nimport LoginPage from \"../pages/LoginPage.vue\";\r\nimport SignupPage from \"../pages/SignupPage.vue\";\r\nimport DashboardPage from \"../pages/DashboardPage.vue\";\r\nimport TicketsPage from \"../pages/TicketsPage.vue\";\r\nimport AnalyticsPage from \"../pages/AnalyticsPage.vue\";\r\nimport SettingsPage from \"../pages/SettingsPage.vue\";\r\n\r\nconst routes = [\r\n  {\r\n    path: \"/\",\r\n    component: LandingPage,\r\n    meta: { requiresAuth: false },\r\n  },\r\n  {\r\n    path: \"/login\",\r\n    component: LoginPage,\r\n    meta: { requiresAuth: false },\r\n  },\r\n  {\r\n    path: \"/signup\",\r\n    component: SignupPage,\r\n    meta: { requiresAuth: false },\r\n  },\r\n  {\r\n    path: \"/dashboard\",\r\n    component: DashboardPage,\r\n    meta: { requiresAuth: true },\r\n  },\r\n  {\r\n    path: \"/tickets\",\r\n    component: TicketsPage,\r\n    meta: { requiresAuth: true },\r\n  },\r\n  {\r\n    path: \"/analytics\",\r\n    component: AnalyticsPage,\r\n    meta: { requiresAuth: true },\r\n  },\r\n  {\r\n    path: \"/settings\",\r\n    component: SettingsPage,\r\n    meta: { requiresAuth: true },\r\n  },\r\n  {\r\n    path: \"/:pathMatch(.*)*\",\r\n    redirect: \"/\",\r\n  },\r\n];\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(),\r\n  routes,\r\n});\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n  const token = localStorage.getItem(\"authToken\");\r\n  const requiresAuth = to.meta.requiresAuth;\r\n\r\n  if (requiresAuth && !token) {\r\n    next(\"/login\");\r\n  } else if (\r\n    !requiresAuth &&\r\n    token &&\r\n    (to.path === \"/login\" || to.path === \"/signup\")\r\n  ) {\r\n    next(\"/dashboard\");\r\n  } else {\r\n    next();\r\n  }\r\n});\r\n\r\nexport default router;\r\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,gBAAgB,EAAEC,cAAc,QAAQ,YAAY;AAC3E,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,YAAY,MAAM,2BAA2B;AAEpD,MAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GAAG;EACTC,SAAS,EAAET,WAAW;EACtBU,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAM;AAC9B,CAAC,EACD;EACEH,IAAI,EAAE,QAAQ;EACdC,SAAS,EAAER,SAAS;EACpBS,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAM;AAC9B,CAAC,EACD;EACEH,IAAI,EAAE,SAAS;EACfC,SAAS,EAAEP,UAAU;EACrBQ,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAM;AAC9B,CAAC,EACD;EACEH,IAAI,EAAE,YAAY;EAClBC,SAAS,EAAEN,aAAa;EACxBO,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,EACD;EACEH,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAEL,WAAW;EACtBM,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,EACD;EACEH,IAAI,EAAE,YAAY;EAClBC,SAAS,EAAEJ,aAAa;EACxBK,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,EACD;EACEH,IAAI,EAAE,WAAW;EACjBC,SAAS,EAAEH,YAAY;EACvBI,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,EACD;EACEH,IAAI,EAAE,kBAAkB;EACxBI,QAAQ,EAAE;AACZ,CAAC,CACF;AAED,MAAMC,MAAM,GAAGhB,YAAY,CAAC;EAC1BiB,OAAO,EAAEhB,gBAAgB,CAAC,CAAC;EAC3BS;AACF,CAAC,CAAC;AAEFM,MAAM,CAACE,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EAC/C,MAAMV,YAAY,GAAGK,EAAE,CAACN,IAAI,CAACC,YAAY;EAEzC,IAAIA,YAAY,IAAI,CAACQ,KAAK,EAAE;IAC1BD,IAAI,CAAC,QAAQ,CAAC;EAChB,CAAC,MAAM,IACL,CAACP,YAAY,IACbQ,KAAK,KACJH,EAAE,CAACR,IAAI,KAAK,QAAQ,IAAIQ,EAAE,CAACR,IAAI,KAAK,SAAS,CAAC,EAC/C;IACAU,IAAI,CAAC,YAAY,CAAC;EACpB,CAAC,MAAM;IACLA,IAAI,CAAC,CAAC;EACR;AACF,CAAC,CAAC;AAEF,eAAeL,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}