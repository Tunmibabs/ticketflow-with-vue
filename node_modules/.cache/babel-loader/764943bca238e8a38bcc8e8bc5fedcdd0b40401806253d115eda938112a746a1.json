{"ast":null,"code":"import { createElementVNode as _createElementVNode, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeStyle as _normalizeStyle, withCtx as _withCtx, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"p-8\"\n};\nconst _hoisted_2 = {\n  class: \"grid md:grid-cols-2 gap-6\"\n};\nconst _hoisted_3 = {\n  class: \"p-6 rounded-lg bg-[var(--card)] border border-[var(--border)]\"\n};\nconst _hoisted_4 = {\n  class: \"p-6 rounded-lg bg-[var(--card)] border border-[var(--border)]\"\n};\nconst _hoisted_5 = {\n  class: \"space-y-4\"\n};\nconst _hoisted_6 = {\n  class: \"text-slate-300\"\n};\nconst _hoisted_7 = {\n  class: \"flex items-center gap-2\"\n};\nconst _hoisted_8 = {\n  class: \"w-32 h-2 bg-slate-700 rounded-full overflow-hidden\"\n};\nconst _hoisted_9 = {\n  class: \"text-slate-300 w-12 text-right\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createBlock($setup[\"DashboardLayout\"], null, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [_cache[2] || (_cache[2] = _createElementVNode(\"h1\", {\n      class: \"text-3xl font-bold text-slate-100 mb-8\"\n    }, \"Analytics\", -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_cache[0] || (_cache[0] = _createElementVNode(\"h2\", {\n      class: \"text-xl font-bold text-slate-100 mb-4\"\n    }, \"Ticket Trends\", -1 /* CACHED */)), _createVNode($setup[\"TicketChart\"], {\n      data: $setup.trendData\n    })]), _createElementVNode(\"div\", _hoisted_4, [_cache[1] || (_cache[1] = _createElementVNode(\"h2\", {\n      class: \"text-xl font-bold text-slate-100 mb-4\"\n    }, \" Status Distribution \", -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_5, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.statusData, item => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: item.status,\n        class: \"flex items-center justify-between\"\n      }, [_createElementVNode(\"span\", _hoisted_6, _toDisplayString(item.status), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"div\", {\n        style: _normalizeStyle({\n          width: item.percentage + '%'\n        }),\n        class: \"h-full bg-blue-500\"\n      }, null, 4 /* STYLE */)]), _createElementVNode(\"span\", _hoisted_9, _toDisplayString(item.percentage) + \"%\", 1 /* TEXT */)])]);\n    }), 128 /* KEYED_FRAGMENT */))])])])])]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["class","_createBlock","$setup","_createElementVNode","_hoisted_1","_hoisted_2","_hoisted_3","_createVNode","data","trendData","_hoisted_4","_hoisted_5","_createElementBlock","_Fragment","_renderList","statusData","item","key","status","_hoisted_6","_toDisplayString","_hoisted_7","_hoisted_8","style","_normalizeStyle","width","percentage","_hoisted_9"],"sources":["C:\\Users\\Tunmise Babalola\\Desktop\\HNG\\HNG Stage 2 task\\ticketflow-with-vue\\src\\pages\\AnalyticsPage.vue"],"sourcesContent":["<template>\r\n  <DashboardLayout>\r\n    <div class=\"p-8\">\r\n      <h1 class=\"text-3xl font-bold text-slate-100 mb-8\">Analytics</h1>\r\n\r\n      <div class=\"grid md:grid-cols-2 gap-6\">\r\n        <div\r\n          class=\"p-6 rounded-lg bg-[var(--card)] border border-[var(--border)]\"\r\n        >\r\n          <h2 class=\"text-xl font-bold text-slate-100 mb-4\">Ticket Trends</h2>\r\n          <TicketChart :data=\"trendData\" />\r\n        </div>\r\n\r\n        <div\r\n          class=\"p-6 rounded-lg bg-[var(--card)] border border-[var(--border)]\"\r\n        >\r\n          <h2 class=\"text-xl font-bold text-slate-100 mb-4\">\r\n            Status Distribution\r\n          </h2>\r\n          <div class=\"space-y-4\">\r\n            <div\r\n              v-for=\"item in statusData\"\r\n              :key=\"item.status\"\r\n              class=\"flex items-center justify-between\"\r\n            >\r\n              <span class=\"text-slate-300\">{{ item.status }}</span>\r\n              <div class=\"flex items-center gap-2\">\r\n                <div class=\"w-32 h-2 bg-slate-700 rounded-full overflow-hidden\">\r\n                  <div\r\n                    :style=\"{ width: item.percentage + '%' }\"\r\n                    class=\"h-full bg-blue-500\"\r\n                  />\r\n                </div>\r\n                <span class=\"text-slate-300 w-12 text-right\"\r\n                  >{{ item.percentage }}%</span\r\n                >\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </DashboardLayout>\r\n</template>\r\n\r\n<script setup lang=\"js\">\r\nimport { ref, computed, onMounted } from 'vue'\r\nimport DashboardLayout from '../components/DashboardLayout.vue'\r\nimport TicketChart from '../components/TicketChart.vue'\r\n\r\nconst tickets = ref([])\r\nconst currentUser = ref({})\r\n\r\nonMounted(() => {\r\n  const user = localStorage.getItem('currentUser')\r\n  if (user) {\r\n    currentUser.value = JSON.parse(user)\r\n  }\r\n\r\n  const allTickets = JSON.parse(localStorage.getItem('tickets') || '[]')\r\n  tickets.value = allTickets.filter((t) => t.userId === currentUser.value.id)\r\n})\r\n\r\nconst trendData = [\r\n  { day: 'Mon', tickets: 12 },\r\n  { day: 'Tue', tickets: 19 },\r\n  { day: 'Wed', tickets: 15 },\r\n  { day: 'Thu', tickets: 25 },\r\n  { day: 'Fri', tickets: 22 },\r\n  { day: 'Sat', tickets: 8 },\r\n  { day: 'Sun', tickets: 5 }\r\n]\r\n\r\nconst statusData = computed(() => {\r\n  const total = tickets.value.length || 1\r\n  return [\r\n    {\r\n      status: 'Open',\r\n      count: tickets.value.filter(t => t.status === 'open').length,\r\n      percentage: Math.round((tickets.value.filter(t => t.status === 'open').length / total) * 100)\r\n    },\r\n    {\r\n      status: 'In Progress',\r\n      count: tickets.value.filter(t => t.status === 'in-progress').length,\r\n      percentage: Math.round((tickets.value.filter(t => t.status === 'in-progress').length / total) * 100)\r\n    },\r\n    {\r\n      status: 'Closed',\r\n      count: tickets.value.filter(t => t.status === 'closed').length,\r\n      percentage: Math.round((tickets.value.filter(t => t.status === 'closed').length / total) * 100)\r\n    }\r\n  ]\r\n})\r\n</script>\r\n"],"mappings":";;EAESA,KAAK,EAAC;AAAK;;EAGTA,KAAK,EAAC;AAA2B;;EAElCA,KAAK,EAAC;AAA+D;;EAOrEA,KAAK,EAAC;AAA+D;;EAKhEA,KAAK,EAAC;AAAW;;EAMZA,KAAK,EAAC;AAAgB;;EACvBA,KAAK,EAAC;AAAyB;;EAC7BA,KAAK,EAAC;AAAoD;;EAMzDA,KAAK,EAAC;AAAgC;;uBAhC1DC,YAAA,CAyCkBC,MAAA;sBAxChB,MAuCM,CAvCNC,mBAAA,CAuCM,OAvCNC,UAuCM,G,0BAtCJD,mBAAA,CAAiE;MAA7DH,KAAK,EAAC;IAAwC,GAAC,WAAS,qBAE5DG,mBAAA,CAmCM,OAnCNE,UAmCM,GAlCJF,mBAAA,CAKM,OALNG,UAKM,G,0BAFJH,mBAAA,CAAoE;MAAhEH,KAAK,EAAC;IAAuC,GAAC,eAAa,qBAC/DO,YAAA,CAAiCL,MAAA;MAAnBM,IAAI,EAAEN,MAAA,CAAAO;IAAS,G,GAG/BN,mBAAA,CA0BM,OA1BNO,UA0BM,G,0BAvBJP,mBAAA,CAEK;MAFDH,KAAK,EAAC;IAAuC,GAAC,uBAElD,qBACAG,mBAAA,CAmBM,OAnBNQ,UAmBM,I,kBAlBJC,mBAAA,CAiBMC,SAAA,QAAAC,WAAA,CAhBWZ,MAAA,CAAAa,UAAU,EAAlBC,IAAI;2BADbJ,mBAAA,CAiBM;QAfHK,GAAG,EAAED,IAAI,CAACE,MAAM;QACjBlB,KAAK,EAAC;UAENG,mBAAA,CAAqD,QAArDgB,UAAqD,EAAAC,gBAAA,CAArBJ,IAAI,CAACE,MAAM,kBAC3Cf,mBAAA,CAUM,OAVNkB,UAUM,GATJlB,mBAAA,CAKM,OALNmB,UAKM,GAJJnB,mBAAA,CAGE;QAFCoB,KAAK,EAAAC,eAAA;UAAAC,KAAA,EAAWT,IAAI,CAACU,UAAU;QAAA;QAChC1B,KAAK,EAAC;iCAGVG,mBAAA,CACkD,QADlDwB,UACkD,EAAAP,gBAAA,CAA5CJ,IAAI,CAACU,UAAU,IAAG,GAAC,gB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}